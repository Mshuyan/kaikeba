阅读源码的目的：
1、为了面试（阅读过xxx源码没有）
2、为了学习设计模式（面向对象的设计能力、OOAD）
3、为了提高编码能力（大厂一般都有codereview）--- 手写公共组件、手写框架

大厂面试JD里面：
1、是否用程序设计能力
2、是否有架构设计能力

两种学习源码的方式
1、直接阅读源码，一边阅读，一边解释
2、仿写源码（凝练核心流程）

阅读源码的方式方法：
1、带着目的去阅读源码
    1.1 找到要阅读的主流程
    1.2 找到入口--自己的程序中使用到的框架代码，就是入口
    1.3 一定要分清主次（如果已经知道该流程主要做什么处理，暂时不要随随便便就进入旁支流程）
2、最好是借鉴于别人的经验去阅读
3、要注意源码阅读的层次（搞清楚流程是怎么处理的？设计模式如何应用的？）
4、学会在源码中进行DEBUG
5、使用好翻译工具
6、记住进行总结（通过笔记记录、或者debug的时候，直接截取调用栈的方法路径）

    |--XmlBeanDefinitionReader
        |--BeanDefinitionDocumentReader#loadBeanDefinitions
            |--.....

整个spring源码课程只讲最核心的两块内容的源码阅读：IoC、AoP

第一节课：
1、仿写spring ioc模块的源码V1\V2(面向过程思维)

第二节课：
1、面向对象设计学习（七大设计原则、工厂模式和单例模式的学习、OOAD的学习）
2、仿写spring ioc的V3版本

第三节课：
1、继续写V3版本
2、源码IoC的源码

课堂笔记
1、常说的spring和springboot有啥区别？
* springboot可以实现零配置，而spring不能（错）
* springboot可以支撑自动配置，而spring不能（对的）
  spring中需要通过xml或者注解手动指定依赖关系，完成依赖配置
* springboot可以使用starter（起步依赖），而spring不能（对）

* springboot是为了替代spring framework，更多的是作为bean的容器去使用

2、spring核心概念
   IoC/DI：控制反转/依赖注入，控制反转指的是依赖注入的角色发送了反转。

3、仿写源码之V1版本
需求：查询用户（user表）


